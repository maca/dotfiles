# Bubbles default configuration file.
#
# This file doubles as the default configuration and as an usage
# example. Read through it. It's mostly useful comments.
#
# Read the _man page_ for the extended descriptions of these features.
#
# If the default configuration /etc/bubbles.conf does not suit your needs, copy
# it to /home/<user>/.config/bubbles.conf
#

#
#
# KEYBINDS
#
#
# Edit/simplify/expannd these to your liking. Add or remove as many keybinds as
# you can/want.
#

# SPAWN
#
[spawn "Tab"]
    command = bubbles-dmenu-switcher

[spawn "`"]
    command = bubbles-dmenu-switcher -currentclass

[spawn "F1"]
    command = /home/maca/bin/toggle-redshift

[spawn "XF86MonBrightnessDown"]
    command = xbacklight -set 0

[spawn "XF86MonBrightnessUp"]
    command = /home/maca/bin/toggle-redshift

[spawn "XF86WLAN"]
    command = slock

[spawn "XF86Display"]
    command = /home/maca/bin/monitors

[spawn "p"]
    command = /home/maca/bin/capture_selection

[spawn "/"]
    command = bubbles-dmenu-switcher


[spawn "Return"]
    command = dmenu_path -fn 'Droid Sans Mono-30' | dmenu -fn 'Droid Sans Mono-30' | sh


# RUN OR RAISE
#
[runorraise "b"]
    target = (Chromium|Firefox|google-chrome|Popcorn-Time|Tor Browser)
    command = chromium || firefox

[runorraise "e"]
    target = emacs
    command = /home/maca/bin/start-ssh-agent.sh && /home/maca/bin/e

[runorraise "."]
    target = (tmux|emacs|alacritty|house|linode)
    command = alacritty --class tmux -t tmux -e /bin/sh -c '/home/maca/bin/tmux-attach'

[runorraise "t"]
    target = (tmux|alacritty)
    command = alacritty --class tmux -t tmux -e /bin/sh -c '/home/maca/bin/tmux-attach'

[runorraise "n"]
    target = nautilus
    command = nautilus

[runorraise "v"]
    target = geeqie
    command = geeqie

[runorraise "r"]
    target = Rawtherapee
    command = rawtherapee

[runorraise "m"]
    target = cmus
    command = alacritty --class cmus -t cmus -e /bin/sh -c /home/maca/bin/music-player


# [runorraise "Return"]
#     target = gmrun
#     command = gmrun


# TEMP
#
[temp_keybinds]
    keys = u i


#
#
# RULES
#
#
# IMPORTANT: leave the "*" rule (0) at the beginning or it will override the
# subsequent rules.
#
# 'state' is one of:
#   fullscreen, max, vmax, hmax, fixed, hidden
#
# 'position' is one of:
#   N, E, S, W, NE, NW, SE, SW, C (center)
#
# 'width' and 'height' specify the size of the window in pixels if >= 1
#   and the fraction of the current monitor if < 1.
#
#   Both on none have to be set in order to be valid.
#
# If 'state' is set, it will override 'position', 'width' and 'height'
#
[rules "0"]
    target = *
    state = normal

[rules "1"]
    target = (Chromium|Firefox|google-chrome|tmux|emacs)
    state = fullscreen

[rules "2"]
    target = (gcolor3)
    position = C

#
#
# WM ACTIONS/SETTINGS
#
#
# 'autostart' Comment it if you don't need it. Use full paths.
#    /home/<user>/.config/script (NOT ~/.config/script)
#
# 'snap_threshold' is the distance at which windows will snap/magnetise/stick to
#     the border of the screen while being dragged.
#
# 'compass' will place a window in potision on the screen. See the man page for
#     an explanation. Options are: dialpad, 10key, left-hand, right-hand, none
#
#     CAREFUL: This WILL get overridden by other keybindings if they overlap.
#
# 'hide_cursor' if set to 1, the cursor is hidden after certain small typing
#     activity and shown on cursor motion.
#
#     NOTE: Not all windows behave well (eg. QT-based programs) with this and
#     the behaviour can feel a bit clunky. [root] toggle_cursor helps...
#     This is disabled by default. Set to 1 to enable it.
#
[wm]
    autostart = /home/<user>/.config/autostart.sh
    compass = dialpad
    snap_threshold = 32
    hide_cursor = 0

#
#
# ROOT KEYBINDS
#
#
# 'back' keybind jumps to the previous client... and back.
#
# 'quit' keybind quits bubbles and kills everything.
#
# 'focus_urgent' keybind is meant to raise the first window that has an
#     "alert/urgent/attention" hint. Not all programs use this functionality
#     when they should.
#
# 'toggle_cursor' hide or show the mouse cursor.
#
# 'cycle' go through the windows while holding MODKEY.
#
[root]
    back = j
    cycle = h
    quit = F12
    focus_urgent = apostrophe
    toggle_cursor = space

#
#
# CLIENT KEYBINDS
#
#
# These are the actions you can apply to the active window.
#
# 'fixate' sets the window centered and 4/5 of the size of the screen.
#
# 'above' sets the window to always try to be on top of the rest until another
#         one is marked as "above", killed, or un-set with the same keybind.
#
# 'flush_<dir>' flush or reflush the window in <dir>. See the man page under
#         FEATURES -> Cient (re)Flushing for a lengthy explanation.
#
# 'next_monitor' cycles the window through every available monitor (the order
#         for this is set by X, not us) whilst trying to preserve it's position
#         relative to the monitor sizes.
#
# 'inflate' increses a window size by 10%
#
# 'deflate' decreses a window size by 10%
#
[client]
    toggle_fullscreen = f
    toggle_fixed = q
    toggle_above = a
    hide = z
    kill = k
    # maximize_vertical = v
    # maximize_horizontal = c
    maximize_both = x
    flush_top = up
    flush_bottom = down
    flush_left = left
    flush_right = right
    send_next_monitor = o
    inflate = pageup
    deflate = pagedown

#
#
# WINDOW BORDER
#
#
# Colours MUST be in Hex format. Use "" to avoid the value getting interpreted
# as a comment (#).
#
# Set 'width' to 0 for borderless windows.
#
[window_border]
    normal = "#1c2c54"
    active = "#535d6c"
    raised = "#838d8c"
    urgent = "#600000"
    fixed = "#182A68"
    max = "#D1C664"
    above = "#D1C664"
    width = 1

#
#
# URGENT BAR
#
#
# To disable this, set the size to 0.
#
# 'size' is it's width in pixels.
#
# 'color' _must_ be a hexadecimal. (double-quote it)
#
# 'position' can be one of: "top", "bottom", "left" or "right".
#
[urgentbar]
    size = 2
    color = "#600000"
    position = bottom

#
#
# DOCK
#
#
# To disable this (default), set the 'size' to 0 or comment the entire block.
#
# 'size' is it's width in pixels.
#
# 'position' can be one of: "top", "bottom", "left" or "right".
#
# 'classname' how to identify the dock. you can find out the class name with
#   $ xprop | grep WM_CLASS
#
# 'monitor' the integer of the nth monitor (starting from 0)
#
# 'behaviour' can be:
#   - "absolute" fullscreen windows will only use the space left by the dock
#   - with anything else, fullscreen windows will be above the dock when focused
#
[dock]
    size = 0
    position = top
    behaviour = absolute
    monitor = 0
    classname = dzen2
